name: Build and Publish Docker Image to ECR

on:
  push:
    branches:
      - dev

env:
  STAGE: dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.repository == 'investware-io/investware-frontend'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_DEPLOYMENT_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEPLOYMENT_SECRET_ACCESS_KEY }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          file_name: '.env.dev'
          envkey_ENVIRONMENT: dev

          envkey_NEXT_PUBLIC_AWS_REGION: ${{ secrets.AWS_REGION }}
          envkey_NEXT_PUBLIC_COGNITO_USER_POOL_ID: ${{ secrets.DEV_COGNITO_USER_POOL_ID }}
          envkey_NEXT_PUBLIC_COGNITO_CLIENT_ID: ${{ secrets.DEV_COGNITO_CLIENT_ID }}
          envkey_NEXT_PUBLIC_COGNITO_IDENTITY_POOL_ID: ${{ secrets.DEV_COGNITO_IDENTITY_POOL_ID }}
          envkey_NEXT_PUBLIC_COGNITO_DOMAIN: ${{ secrets.DEV_COGNITO_DOMAIN }}

          envkey_NEXT_PUBLIC_BASE_URL: ${{ secrets.DEV_NEXT_PUBLIC_BASE_URL }}

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-core-cdk-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-core-cdk-yarn-

      - name: Check if cache was hit
        run: |
          echo "Cache hit: ${{ steps.yarn-cache.outputs.cache-hit }}"

      - name: Install project dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Deploy
        run: npx sst deploy --stage ${{ env.STAGE }} --verbose
